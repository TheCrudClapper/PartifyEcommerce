@model IEnumerable<CSOS.UI.ViewModels.OfferViewModels.UserOffersViewModel>
@{
    ViewBag.Title = "Your Offers";
}
@section Styles {
    <link rel="stylesheet" href="~/css/auction-styles.css" asp-append-version="true" />
}
@await Html.PartialAsync("_ConfirmationModalPartial")

<div class="container mt-3">
    <h3 class="fw-bold ps-2">Your Active Listings</h3>
    <div class="midesection-style mb-3">
        <form method="get" id="filterForm" >
            <div class="row">
                <div class="col-12 col-md-10">
                    <input type="text" name="title" class="form-control" id="searchPhrase" value= "@Context.Request.Query["title"]" placeholder="Search for listing">
                </div>
                <div class="col-12 col-md-2 mt-2 mt-md-0 ">
                    <button id="submitButton" type="submit" class="btn custom-button w-100">Search</button>
                </div>
            </div>
        </form>
    </div>
    <div id="offersResults">
        @await Html.PartialAsync("OfferPartials/_UserOfferListPartial", Model);
    </div>


</div>
@section Scripts{
    <script>

        $(document).ready(function () {
            $('#submitButton').on('click', function (e) {
                e.preventDefault();

                const data = $('#filterForm').serialize();

                $.ajax({
                    url: '/Offer/FilterUserOffers/',
                    type: 'GET',
                    data: data,
                    success: function (html) {
                        $('#offersResults').html(html);
                    },
                    error: function () {
                        showToast('Something went wrong while filtering offers', false);
                    }
                });
            });
        });
        
        let offerIdToDelete = null;
        let tokenToUse = null;

        $(document).on('click', '.deleteButton', function (e){
            e.preventDefault();
            offerIdToDelete = $(this).data('id');
            tokenToUse = $('input[name="__RequestVerificationToken"]').val();

            const modal = new bootstrap.Modal(document.getElementById('messageModal'));
            $('#messageModalLabel').text("Delete Offer");
            $('.modal-body').text("Are you sure you want to delete this offer?");
            $('.modal-footer .btn-ok').show();
            modal.show();
        });
        
        
        $(document).on('click', '.yes-btn', function (){
            if(offerIdToDelete !== null && tokenToUse !== null){
                $.ajax({
                    url: '/Offer/Delete/' + offerIdToDelete,
                    type: 'POST',
                    headers:{
                        'RequestVerificationToken': tokenToUse
                    },
                    success: function (response){
                        if ($('#offersContainer .card').length === 1) {
                            location.reload();
                        } else {
                            $('#offersContainer').load(location.href + ' #offersContainer > *');
                            showToast(response.message, response.success);
                        }
                    },
                    error: function () {
                        showToast('Could not delete item',false)
                    },
                    complete: function () {
                        offerIdToDelete = null;
                        tokenToUse = null;
                    }
                });
            }
            const modal = bootstrap.Modal.getInstance(document.getElementById('messageModal'));
            modal.hide();
        });
        
        
    </script>
}